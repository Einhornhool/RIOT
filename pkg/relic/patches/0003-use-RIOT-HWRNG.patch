From 49b86575a85e554db8c018c6f1914c84d263df90 Mon Sep 17 00:00:00 2001
From: Einhornhool <26007369+Einhornhool@users.noreply.github.com>
Date: Wed, 30 Sep 2020 23:14:01 +0300
Subject: [PATCH] relic_rand_hash: use RIOT HWRNG instead of relic rand hash

---
 src/rand/relic_rand_hash.c | 41 ++++++++++++++++++++------------------
 1 file changed, 22 insertions(+), 19 deletions(-)

diff --git a/src/rand/relic_rand_hash.c b/src/rand/relic_rand_hash.c
index 42c2bd91..17c1d29d 100644
--- a/src/rand/relic_rand_hash.c
+++ b/src/rand/relic_rand_hash.c
@@ -38,6 +38,8 @@
 #include "relic_md.h"
 #include "relic_err.h"
 
+void hwrng_read(void *buf, unsigned int num);
+
 /*============================================================================*/
 /* Private definitions                                                        */
 /*============================================================================*/
@@ -143,25 +145,26 @@ static void rand_gen(uint8_t *out, int out_len) {
 #if RAND == HASH
 
 void rand_bytes(uint8_t *buf, int size) {
-	uint8_t hash[MD_LEN];
-	int carry, len  = (RAND_SIZE - 1)/2;
-	ctx_t *ctx = core_get();
-
-	if (sizeof(int) > 2 && size > (1 << 16)) {
-		THROW(ERR_NO_VALID);
-	}
-
-	/* buf = hash_gen(size) */
-	rand_gen(buf, size);
-	/* H = hash(03 || V) */
-	ctx->rand[0] = 0x3;
-	md_map(hash, ctx->rand, 1 + len);
-	/* V = V + H + C  + reseed_counter. */
-	rand_add(ctx->rand + 1, ctx->rand + 1 + len, len);
-	carry = rand_add(ctx->rand + 1 + (len - MD_LEN), hash, MD_LEN);
-	rand_inc(ctx->rand, len - MD_LEN + 1, carry);
-	rand_inc(ctx->rand, len + 1, ctx->counter);
-	ctx->counter = ctx->counter + 1;
+    hwrng_read(buf, size);
+	// uint8_t hash[MD_LEN];
+	// int carry, len  = (RAND_SIZE - 1)/2;
+	// ctx_t *ctx = core_get();
+
+	// if (sizeof(int) > 2 && size > (1 << 16)) {
+	// 	THROW(ERR_NO_VALID);
+	// }
+
+	// /* buf = hash_gen(size) */
+	// rand_gen(buf, size);
+	// /* H = hash(03 || V) */
+	// ctx->rand[0] = 0x3;
+	// md_map(hash, ctx->rand, 1 + len);
+	// /* V = V + H + C  + reseed_counter. */
+	// rand_add(ctx->rand + 1, ctx->rand + 1 + len, len);
+	// carry = rand_add(ctx->rand + 1 + (len - MD_LEN), hash, MD_LEN);
+	// rand_inc(ctx->rand, len - MD_LEN + 1, carry);
+	// rand_inc(ctx->rand, len + 1, ctx->counter);
+	// ctx->counter = ctx->counter + 1;
 }
 
 void rand_seed(uint8_t *buf, int size) {
-- 
2.17.1

